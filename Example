Python program that simulates a basic banking system. This program includes functionalities such as account creation, balance checking, deposits, withdrawals, and transaction history.
class BankAccount:
    def __init__(self, account_number, account_holder, balance=0):
        self.account_number = account_number
        self.account_holder = account_holder
        self.balance = balance
        self.transaction_history = []

    def deposit(self, amount):
        if amount > 0:
            self.balance += amount
            self.transaction_history.append(f'Deposit: +${amount}')
            print(f'Deposit successful. Current balance: ${self.balance}')
        else:
            print('Invalid deposit amount.')

    def withdraw(self, amount):
        if 0 < amount <= self.balance:
            self.balance -= amount
            self.transaction_history.append(f'Withdrawal: -${amount}')
            print(f'Withdrawal successful. Current balance: ${self.balance}')
        else:
            print('Invalid withdrawal amount or insufficient funds.')

    def check_balance(self):
        print(f'Account Balance for {self.account_holder}: ${self.balance}')

    def view_transaction_history(self):
        print(f'Transaction History for {self.account_holder}:')
        for transaction in self.transaction_history:
            print(transaction)

# Example:
if __name__ == "__main__":
    # Create two bank accounts
    account1 = BankAccount(account_number=101, account_holder='Alice')
    account2 = BankAccount(account_number=102, account_holder='Bob')

    # Perform transactions
    account1.deposit(1000)
    account1.withdraw(500)
    account1.check_balance()

    account2.deposit(1500)
    account2.withdraw(200)
    account2.check_balance()

    # View transaction history
    account1.view_transaction_history()
    account2.view_transaction_history()
